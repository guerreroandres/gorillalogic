name: wse-tools Deploy

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: "Building wse-tools"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    outputs:
      aws_region: us-west-2
      app-version: ${{ env.app_version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get chart version for tag
      run: |
        git pull
        sudo apt-get -y update && sudo apt-get -y install libxml2-utils
        pom_version=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" ./pom.xml |cut -f1 -d "-")
        sed -i 's/^appVersion:.*/appVersion: "'"$pom_version"'"/g' ../chart/wse-tools/Chart.yaml
        echo "app_version=$pom_version" >> $GITHUB_ENV
        echo "New app version: $app_version."
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "Updating Chart appVersion"
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: wse-tools
        IMAGE_TAG: ${{ env.app_version }}
        PROD_REPLICA_WAVELY_DB_USERNAME: ${{ secrets.PROD_REPLICA_WAVELY_DB_USERNAME }}
        PROD_REPLICA_WAVELY_DB_PASSWORD: ${{ secrets.PROD_REPLICA_WAVELY_DB_PASSWORD }}
        PROD_SEARCHBOX_TOKEN: ${{ secrets.PROD_SEARCHBOX_TOKEN }}
        PROD_ES_USERNAME: ${{ secrets.PROD_ES_USERNAME }}
        PROD_ES_PASSWORD: ${{ secrets.PROD_ES_PASSWORD }}
      run: |
        # Build a docker container and push it to ECR
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
        --build-arg PROD_REPLICA_WAVELY_DB_USERNAME=${PROD_REPLICA_WAVELY_DB_USERNAME} \
        --build-arg PROD_REPLICA_WAVELY_DB_PASSWORD=${PROD_REPLICA_WAVELY_DB_PASSWORD} \
        --build-arg PROD_SEARCHBOX_TOKEN=${PROD_SEARCHBOX_TOKEN} \
        --build-arg PROD_ES_USERNAME=${PROD_ES_USERNAME} \
        --build-arg PROD_ES_PASSWORD=${PROD_ES_PASSWORD} .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        git pull

  deploy:
    name: "Deploying wse-tools with Helm Chart"
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: appVersion
      run: git pull
    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ needs.build.outputs.aws_region }}
    - name: Helm Deploy
      uses: koslibpro/helm-eks-action@v1.25.2
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
      with:
        command: helm upgrade wse-tools ./chart/wse-tools/ --install --wait --atomic --namespace=staging --set deployment.tag=${{ needs.build.outputs.app-version }}